import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useRef } from 'react'
import { Textarea, Text, Button, Checkbox, CheckboxGroup, Stack, Box } from '@chakra-ui/react'
import styles from '../styles/Home.module.css'
import ResizeTextarea from "react-textarea-autosize";
import {format, formatISO, getMonth, getDate} from 'date-fns'

import bodyParser from "body-parser";
import util from "util";
import Link from 'next/link'

const getBody = util.promisify(bodyParser.urlencoded());


const AddQuestionAnswer: NextPage = (props: any) => {

  const date1 = new Date();
  const date2 = formatISO(new Date());

  const formattedDate2 = format(date1, 'MMMM dd, yyyy');
  const formattedDate22 = format(date1, 'h:mm a');

  const questionRef = useRef();

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Text fontSize="lg">original question-hit by a driver who then lied</Text>
        <br/>
        {formattedDate2} at {formattedDate22}
        <br/>
        here {JSON.stringify(date2)}
        <br/>
        date of question - August 15th, 2022 at 1:00pm
        <br/>
        const date = new Date()
        <br/>
        const month = getMonth(date) + 1
        <br/>
        const date = getDate(date) + 1
        <br/>
        const year = getYear(date) + 1
        <br/>
        user<Link href="/user_profile">user</Link>
        <br/>
        <br/>
        answer
        <br/>
        <Box w="50%">
          <Textarea
              minH="unset"
              overflow="hidden"
              w="100%"
              resize="none"
              ref={questionRef}
              minRows={1}
              as={ResizeTextarea}
              {...props}
              name="answer"
            />
        </Box>
        <br/>
        <Button>Submit answer</Button><Button>Cancel</Button>
        
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getServerSideProps = async ({ req, res, params }: any) => {

  //const router = useRouter(); 

  await getBody(req, res);
  console.log("answer" + JSON.stringify(req.body["answer"]));

  //router.push("/homepage");

  //return {
  //  redirect: {
  //    permanent: false,
  //    destination: `/question/12345`
  //  },
  //};

  //check db for email and password
  //if error then redirect bac
  //else go to homepage
  //router.push("/homepage");
 
  /*try {
    const response = await axios.get(
      `https://api.example.com/getHomeSection?title=Section 1`
    );
    
    return {
      props: {
        show: response.data,
      },
    };
  } catch (error) {
    return {
      props: {
        error: error.error,
      },
    };
  }*/

  return {props: {}};

};


export default AddQuestionAnswer
